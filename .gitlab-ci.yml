.container_scanning:
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: ".trivycache/"
  script:
    - trivy --version
    - trivy clean --scan-cache
    - time trivy image --download-db-only
    - mkdir -p .trivycache
    - time trivy image --input $TAR_IMAGE_NAME --exit-code 0 --format template --template "@/contrib/gitlab.tpl" --output "$FULL_IMAGE_NAME-scanning-report.json" "$FULL_IMAGE_NAME"
    - time trivy image --input $TAR_IMAGE_NAME --exit-code 0 "$FULL_IMAGE_NAME"
    - time trivy image --input $TAR_IMAGE_NAME --exit-code 1 --severity CRITICAL "$FULL_IMAGE_NAME"
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    reports:
      container_scanning: $FULL_IMAGE_NAME-scanning-report.json
      
stages:
#  - notify
#  - build
#  - security-scan
  - deploy




deploy-workload:
  stage: deploy
  image: alpine:3.18  
  before_script:
    - apk add --no-cache aws-cli curl bash
    
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - kubectl version --client

    - aws --version
    - kubectl version --client
    - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
  script:
    - cd cluster-workloads
    - kubectl delete -f . || true  
    - kubectl apply -f .
  after_script:
    - kubectl get pods
    - kubectl get deploy
    - kubectl get svc
    - kubectl describe node-app-service 
#  needs:
#    - docker-push-image